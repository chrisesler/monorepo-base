@use '@angular/material' as mat;
@use "@cesler/ui/themes/material-theme-creator" as ngx-mtc;

@use '@cesler/ui/styles/utils';

// theme structures
@use '@cesler/ui/themes/themes/default' as default;

@use '@cesler/ui/themes/css-variables' as cssvars;

html.theme-test {

    //$vars: cssvars.palette-theme();
    //@debug $vars;

    @include default.dark-theme();

    //$theme-map: default.light-theme-palette-map();

    //@include utils.debug-map($theme-map);

    /*@include mat.core();
    @include ngx-mtc.init();

    $primary-map: ngx-mtc.create-theme-map('primary');
    $accent-map: ngx-mtc.create-theme-map('accent');
    $warn-map: ngx-mtc.create-theme-map('warn');

    :root {
        --is-dark-theme: 1; // Is dark theme? 1 or 0;
        @include ngx-mtc.theme-base(); // Creates base colors

        // Creates theme colors
        @include ngx-mtc.create-variables-from-color('primary', #009688, 38%); // can update
        @include ngx-mtc.create-variables-from-color('accent', #2196f3, 57%); // can update
        @include ngx-mtc.create-variables-from-map('warn', mat.$red-palette); // can not update this theme
    }

    $primary-palette: mat.define-palette($primary-map);
    $accent-palette: mat.define-palette($accent-map);
    $warn-palette: mat.define-palette($warn-map);

    // Custom theme
    $theme: ngx-mtc.custom-theme($primary-palette, $accent-palette, $warn-palette);

    // Creates Angular Material Theme
    //@include mat.all-component-themes($theme);
    */
}
